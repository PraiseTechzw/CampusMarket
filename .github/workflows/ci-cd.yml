name: Campus Market CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

env:
  FLUTTER_VERSION: '3.35.2'
  JAVA_VERSION: '17'

jobs:
  # Code Quality & Testing
  quality:
    name: Code Quality & Testing
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Get dependencies
        run: flutter pub get

      - name: Verify formatting
        run: dart format --output=none --set-exit-if-changed .

      - name: Analyze code
        run: flutter analyze --fatal-infos

      - name: Run tests
        run: flutter test --coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          file: coverage/lcov.info
          fail_ci_if_error: false

  # Build Android APK
  build-android:
    name: Build Android APK
    runs-on: ubuntu-latest
    needs: quality
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Get dependencies
        run: flutter pub get

      - name: Build APK
        run: flutter build apk --release --target-platform android-arm,android-arm64,android-x64

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: campus-market-apk
          path: build/app/outputs/flutter-apk/app-release.apk
          retention-days: 30

  # Build Android App Bundle
  build-aab:
    name: Build Android App Bundle
    runs-on: ubuntu-latest
    needs: quality
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Get dependencies
        run: flutter pub get

      - name: Build AAB
        run: flutter build appbundle --release

      - name: Upload AAB artifact
        uses: actions/upload-artifact@v4
        with:
          name: campus-market-aab
          path: build/app/outputs/bundle/release/app-release.aab
          retention-days: 30

  # Build Web
  build-web:
    name: Build Web Application
    runs-on: ubuntu-latest
    needs: quality
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Get dependencies
        run: flutter pub get

      - name: Build Web
        run: flutter build web --release

      - name: Upload Web artifact
        uses: actions/upload-artifact@v4
        with:
          name: campus-market-web
          path: build/web
          retention-days: 30

  # Deploy to Firebase Hosting (if on main branch)
  deploy-web:
    name: Deploy Web to Firebase
    runs-on: ubuntu-latest
    needs: [quality, build-web]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Get dependencies
        run: flutter pub get

      - name: Build Web
        run: flutter build web --release

      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
          channelId: live
          projectId: campus-market-app

  # Create Release (if tag is created)
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build-android, build-aab, build-web]
    if: github.event_name == 'release'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download APK artifact
        uses: actions/download-artifact@v4
        with:
          name: campus-market-apk
          path: ./artifacts

      - name: Download AAB artifact
        uses: actions/download-artifact@v4
        with:
          name: campus-market-aab
          path: ./artifacts

      - name: Download Web artifact
        uses: actions/download-artifact@v4
        with:
          name: campus-market-web
          path: ./artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./artifacts/app-release.apk
            ./artifacts/app-release.aab
            ./artifacts/web/**
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Security Scanning
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  # Performance Testing
  performance:
    name: Performance Testing
    runs-on: ubuntu-latest
    needs: quality
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Get dependencies
        run: flutter pub get

      - name: Run performance tests
        run: flutter test --coverage test/performance_test.dart

  # Build Summary
  build-summary:
    name: Build Summary
    runs-on: ubuntu-latest
    needs: [quality, build-android, build-aab, build-web]
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Build Summary
        run: |
          echo "# ðŸŽ“ Campus Market Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## ðŸ“Š Build Status" >> $GITHUB_STEP_SUMMARY
          echo "- **Quality Checks**: ${{ needs.quality.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Android APK**: ${{ needs.build-android.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Android AAB**: ${{ needs.build-aab.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Web Build**: ${{ needs.build-web.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## ðŸš€ Deployment Status" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Trigger**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## ðŸ“± Build Artifacts" >> $GITHUB_STEP_SUMMARY
          echo "- APK: Available for download" >> $GITHUB_STEP_SUMMARY
          echo "- AAB: Available for Google Play Store" >> $GITHUB_STEP_SUMMARY
          echo "- Web: Ready for deployment" >> $GITHUB_STEP_SUMMARY
